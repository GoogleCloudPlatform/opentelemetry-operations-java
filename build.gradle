subprojects {
    apply plugin: 'jacoco'
    apply plugin: 'java-library'
    apply plugin: 'maven'
    apply plugin: 'signing'

    group = "com.google.cloud.opentelemetry"
    version = "0.8.0-SNAPSHOT" // CURRENT_VERSION

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local' }
    }

    ext {
        autoValueVersion = '1.7.4'
        slf4jVersion = '1.7.30'
        googleCloudVersion = '1.0.2'
        cloudMonitoringVersion = '2.0.1'
        openTelemetryVersion = '0.7.0'
        junitVersion = '4.13'
        opentelemetryOperationsVersion = "0.7.1"  // CURRENT_RELEASE_VERSION

        libraries = [
                auto_value_annotations       : "com.google.auto.value:auto-value-annotations:${autoValueVersion}",
                auto_value                   : "com.google.auto.value:auto-value:${autoValueVersion}",
                google_cloud_core            : "com.google.cloud:google-cloud-core:${googleCloudVersion}",
                google_cloud_trace           : "com.google.cloud:google-cloud-trace:${googleCloudVersion}",
                google_cloud_trace_grpc      : "com.google.api.grpc:grpc-google-cloud-trace-v2:${googleCloudVersion}",
                google_cloud_monitoring      : "com.google.cloud:google-cloud-monitoring:${cloudMonitoringVersion}",
                google_cloud_monitoring_grpc : "com.google.cloud:grpc-google-cloud-monitoring-v3:${cloudMonitoringVersion}",
                slf4j                        : "org.slf4j:slf4j-api:${slf4jVersion}",
                opentelemetry_api            : "io.opentelemetry:opentelemetry-api:${openTelemetryVersion}",
                opentelemetry_sdk            : "io.opentelemetry:opentelemetry-sdk:${openTelemetryVersion}",
                opentelemetry_operations_java: "com.google.cloud.opentelemetry:exporter-trace:${opentelemetryOperationsVersion}"
        ]
        testLibraries = [
                junit       : "junit:junit:${junitVersion}",
                slf4j_simple: "org.slf4j:slf4j-simple:${slf4jVersion}"
        ]
    }

    task javadocJar(type: Jar) {
        archiveClassifier.set('javadoc')
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    test {
        systemProperty 'mock.server.path', System.getProperty('mock.server.path')
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        required false
        sign configurations.archives
    }

    uploadArchives {
        onlyIf {
            name in ['exporter-trace']
        }
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                def configureAuth = {
                    if (rootProject.hasProperty('ossrhUsername') && rootProject.hasProperty('ossrhPassword')) {
                        authentication(userName: rootProject.ossrhUsername, password: rootProject.ossrhPassword)
                    }
                }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/", configureAuth)

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/", configureAuth)

                pom.project {
                    name 'OpenTelemetry Operations Java'
                    description 'OpenTelemetry exporters to Google Cloud Trace and Google Cloud Monitoring'
                    packaging 'jar'
                    url 'https://github.com/GoogleCloudPlatform/opentelemetry-operations-java'

                    scm {
                        connection 'scm:svn:https://github.com/GoogleCloudPlatform/opentelemetry-operations-java'
                        developerConnection 'scm:svn:https://github.com/GoogleCloudPlatform/opentelemetry-operations-java'
                        url 'https://github.com/GoogleCloudPlatform/opentelemetry-operations-java'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'com.google.cloud.opentelemetry'
                            name 'OpenTelemetry Operations Contributors'
                            email 'opentelemetry-team@google.com'
                            organization = 'Google Inc'
                            organizationUrl 'https://cloud.google.com/products/operations'
                        }
                    }
                }
            }
        }
    }
}
