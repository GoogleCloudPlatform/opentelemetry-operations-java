/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
	id 'java'

	id 'org.springframework.boot' version '2.7.18'
	id 'org.graalvm.buildtools.native' version '0.10.3'
}
import org.springframework.boot.gradle.plugin.SpringBootPlugin

group = 'com.google.cloud.opentelemetry.example'
// examples are not published, so version can be hardcoded
version = '0.1.0'

repositories {
	mavenCentral()
}

description = 'Java Spring Boot application running as GraalVM Native Image, instrumented using OpenTelemetry Spring Boot Starter'

repositories {
	mavenCentral()
}

dependencies {
	implementation platform(SpringBootPlugin.BOM_COORDINATES)
	implementation platform(libraries.opentelemetry_instrumetation_bom)
	implementation(libraries.spring_boot_starter_web)
	implementation(libraries.spring_boot_starter_actuator)
	implementation("io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter")
	//	exporter dependencies
	//	implementation project(':exporter-trace')
	//	implementation project(':exporter-metrics')
	//	// auto exporter makes Google Cloud exporters available to autoconfigure module
	//	runtimeOnly project(':exporter-auto')
	//	// resource detection module
	//	runtimeOnly(libraries.opentelemetry_gcp_resources)
}

test {
	useJUnitPlatform()
}
